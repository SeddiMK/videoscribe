name: Deploy to Server videoscribe.zvon.online

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # 3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      - name: Install dependencies
        run: npm ci

      # 4. –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
      - name: Build project
        run: npm run build
        env:
          NODE_ENV: production

      # 5. SSH –∫–ª—é—á ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ, —á—Ç–æ –∏ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º –¥–æ–º–µ–Ω–µ
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      # 6. –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
      - name: Create .env file
        run: |
          cat > .env.production << EOF
          NODE_ENV=production
          ${{ secrets.ENV_VARS }}
          EOF

      # 7. –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è videoscribe
      - name: Sync code to server
        run: |
          rsync -avz --delete \
            --exclude 'node_modules' \
            --exclude '.git' \
            --exclude '.github' \
            --exclude '.env*' \
            --exclude '*.log' \
            --exclude 'README.md' \
            -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            ./ root@${{ secrets.SERVER_IP }}:/var/www/videoscribe/

          # –ö–æ–ø–∏—Ä—É–µ–º .env –æ—Ç–¥–µ–ª—å–Ω–æ
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            .env.production root@${{ secrets.SERVER_IP }}:/var/www/videoscribe/.env

      # 8. –î–µ–ø–ª–æ–π —á–µ—Ä–µ–∑ docker-compose
      - name: Deploy with Docker Compose
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{ secrets.SERVER_IP }} << 'ENDSSH'
            cd /var/www/videoscribe

            # –ë—ç–∫–∞–ø (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            docker-compose ps -q | xargs -r docker inspect \
              --format='{{.Name}} {{.Config.Image}}' > .backup_images

            docker-compose down
            docker-compose up -d --build --remove-orphans

            sleep 10

            if ! docker-compose ps | grep -q "Up"; then
              echo "‚ö†Ô∏è  Deployment failed! Rolling back..."
              docker-compose down
              exit 1
            fi

            docker image prune -f
            echo "‚úÖ Deployment successful!"
          ENDSSH

      # 9. Health check
      - name: Health check
        run: |
          sleep 5
          response=$(curl -s -o /dev/null -w "%{http_code}" https://videoscribe.zvon.online)
          if [ "$response" != "200" ]; then
            echo "‚ö†Ô∏è  Health check failed! Status: $response"
            exit 1
          fi
          echo "‚úÖ Application is healthy!"

      # 10. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      - name: Notify success
        if: success()
        run: echo "üöÄ Deployment to videoscribe.zvon.online completed successfully!"

      - name: Notify failure
        if: failure()
        run: echo "‚ùå Deployment to videoscribe.zvon.online failed!"
