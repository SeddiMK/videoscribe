name: Deploy to Server zvon.online

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Получаем код репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Настройка SSH ключа
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      # 3. Сборка проекта
      - name: Build project
        run: |
          npm ci
          npm run build

      # 4. Создание .env файлов
      - name: Create .env files
        uses: thaind0/envfile@v1
        with:
          secrets: ${{ toJSON(secrets) }}
          file: secrets.env
          exclude: SERVER_*, DEV_*, AI_*

      - name: Create vars.env
        uses: thaind0/envfile@v1
        with:
          secrets: ${{ toJSON(vars) }}
          file: vars.env
          exclude: DEV_*, AI_*

      # 5. Копирование нужных файлов на сервер
      - name: Upload build and configs
        run: |
          rsync -avz --delete \
            --exclude '.git' \
            --exclude '.github' \
            --exclude 'node_modules' \
            -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            ./ root@${{ secrets.SERVER_IP }}:/opt/videoscribe/

          rsync -avz -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            vars.env secrets.env root@${{ secrets.SERVER_IP }}:/opt/videoscribe/

      # 6. Деплой через docker-compose
      - name: Deploy on server
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{ secrets.SERVER_IP }} "
            cd /opt/videoscribe
            cat vars.env > .env
            cat secrets.env >> .env
            sed -i 's/MASTER_//g' .env
            docker-compose down
            docker-compose up -d --build --remove-orphans
            docker system prune -af
          "
